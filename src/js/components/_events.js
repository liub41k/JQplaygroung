
// .keydown

// $( 'button' ).click(function() { // задаем функцию при нажатиии на элемент button
//   $( '.div' ).keydown(); // вызываем событие keydown на элементе <div>
// });
// $( '.div' ).keydown(function() { // задаем функцию при нажатиии любой клавиши клавиатуры на элементе
//   $( '.div' ).css( 'background', 'green' ); // задаем цвет заднего фона элемента
// });
// Обратите внимание, что напрямую мы не можем вызвать у элемента <div> событие "keydown" по той причине, что элемент не может получить фокус.

// .click

// $( 'button' ).click(function() { // задаем функцию при нажатиии на элемент <button>
//   $( '.div' ).click(); // вызываем событие click на элементе <div>
// });
// $( '.div' ).click(function() { // задаем функцию при нажатиии на элемент <div>
//   $( '.div' ).toggle(); // отображаем, или скрываем элемент
// });
// Обратите внимание, что если мы вызываем напрямую событие "click" на элемент <div>, 
// то мы его можем только скрыть, по той причине, что напрямую кликнуть по скрытому 
// элементу нельзя, но мы можем опять отобразить этот элемент кликнув по кнопке, 
// которая симулирует щелчок по этому элементу.

// .hover

// $( '.div' ).hover(function() { // задаем функцию при наведении курсора на элемент	
//   $( '.div' ).css( 'background', 'green' ) // задаем цвет заднего фона
//     .text('Курсор на элементе'); // задаем текстовое содержимое
// }, function() { // задаем функцию, которая срабатывает, когда указатель выходит из элемента 	
//   $( '.div' ).css( 'background', 'red' ) // задаем цвет заднего фона
//     .text('Курсор вышел из элемента'); // задаем текстовое содержимое
// });


// .mousemove

// $( document ).mousemove(function( event ) { // задаем функцию при перемещении курсора мыши над документом
//   $( '.div:first' ).text( 'event.pageX: ' + event.pageX ); // добавляем в первый элемент <div> в документе позицию курсора мыши относительно левого края документа
//   $( '.div:last' ).text( 'event.pageY: ' + event.pageY ); // добавляем в последний элемент <div> в документе позицию курсора мыши относительно верхнего края документа
// });


// .resize

// $( 'button' ).click(function() { // задаем функцию при нажатиии на элемент <button>
//   $( window ).resize(); // вызываем событие "resize" на объекте window
// });
// $( window ).resize(function() { // задаем функцию при срабатывании события "resize" на объекте window
//   var width = $( window ).width();// ширина области просмотра браузера
//   $( 'p' ).html( width ); // вставляем значение ширины области просмотра браузера
// });


// .change


// $( 'button' ).click(function() { // задаем функцию при нажатиии на элемент <button>
//   $( 'textarea' ).change(); // вызываем событие change на элементе <textarea>
// });
// $( this ).change(function() { // задаем функцию при срабатывании события change на элементе  с которым взаимодействует пользователь
//   $( 'p' ).css( 'display', 'block' ) // задаем, что элемент <p> становится блочным
//     .text( 'Что-то изменилось' ) // добавляем текстовое содержимое
//     .fadeOut( 750 ); //  плавно изменяем прозрачность для элемента
// });

// .submit

// $( 'button' ).click(function() { // задаем функцию при нажатиии на элемент <button>
//   $( 'form' ).submit(); // вызываем событие submit на элементе <form>
// });
// $( 'form' ).submit(function( event ) { // задаем функцию при срабатывании события "submit" на элементе <form>
//   event.preventDefault(); // действие события по умолчанию не будет срабатывать
//   $( 'span' ).text( 'Form submitted' ) // добавляем текстовое содержимое в элемент <span>
//     .css({ 
//       'display': 'inline', // элемент <span> отображается как строчный
//       'color': 'forestgreen' // цвет текста светло-зеленый
//     })
//     .fadeOut( 1000 ); //  плавно изменяем прозрачность элемента <span> за 1 секунду 
// });
